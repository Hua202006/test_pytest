{"name": "标id不存在", "status": "broken", "statusDetails": {"message": "TypeError: close() missing 1 required positional argument: 'self'", "trace": "self = <allure_commons._allure.fixture object at 0x0000025474B68848>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\allure_commons\\_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @pytest.fixture(scope='session', autouse=True)  # autouse=True 自动调用此方法\n    def start():\n        do_log.info(\"开始执行用例\")\n        generate_three_user()\n        do_mysql = HandleMysql()\n        # 在每条用例执行之前，获取未注册的手机号码，然后更新全局数据池\n        setattr(GlobalData, \"${not_existed_tel}\", do_mysql.create_not_existed_mobile())\n        setattr(GlobalData, \"${not_existed_tel_01}\", do_mysql.create_not_existed_mobile())\n        # 创建一个不存在的用户id，并加入到全局数据池中\n        setattr(GlobalData, \"${not_existed_id}\", do_mysql.get_not_existed_user_id())\n        # 创建一个不存在的loan id，并加入到全局数据池中\n        setattr(GlobalData, \"${not_existed_loan_id}\", do_mysql.get_not_existed_loan_id())\n    \n    \n        yield  # 后置\n>       HandleRequest.close()\nE       TypeError: close() missing 1 required positional argument: 'self'\n\nconftest.py:39: TypeError"}, "parameters": [{"name": "one_testcase", "value": "<scripts.handle_excel.TestCase object at 0x0000025474AA1C08>"}], "start": 1630500365120, "stop": 1630500365248, "uuid": "0b4d0608-a0ef-4500-b9b0-99e106c343ee", "historyId": "5813d638226c18de88db6c5cb328965d", "testCaseId": "428abb32b3140dbfd934ee0050646ed9", "fullName": "cases.test_project.TestProject#test_project", "labels": [{"name": "parentSuite", "value": "cases"}, {"name": "suite", "value": "test_project"}, {"name": "subSuite", "value": "TestProject"}, {"name": "host", "value": "LAPTOP-VI0AG2S8"}, {"name": "thread", "value": "12120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.test_project"}]}